package uy.com.boxes.admin.websockets;

import uy.com.boxes.admin.websockets.messages.Message;
import uy.com.boxes.admin.websockets.messages.MoneyMessage;
import uy.com.boxes.admin.websockets.messages.SetPriceMessage;
import uy.com.boxes.admin.websockets.messages.SetStockMessage;

import javax.websocket.ContainerProvider;
import javax.websocket.DeploymentException;
import javax.websocket.WebSocketContainer;
import java.io.IOException;
import java.net.URI;
import java.util.Timer;
import java.util.TimerTask;
import java.util.logging.Logger;

public class SendMessageClient extends BaseClientEndpoint {
    private static Logger log = Logger.getLogger(SendMessageClient.class.getName());

    public static void main(String[] args) {
        WebSocketContainer container = ContainerProvider.getWebSocketContainer();
        try {
            BoxesClientEndpoint endpoint = new BoxesClientEndpoint("box0.json");
            container.connectToServer(endpoint, URI.create(uri));

            Timer timer = new Timer();
            TimerTask task = new TimerTask() {
                @Override
                public void run() {
                    log.info("Sending new set money to $500 message to box 1");
                    Message moneyMsg = new MoneyMessage(1L, 500);
                    endpoint.sendMessage(moneyMsg);

                    try {
                        Thread.sleep(5000);
                    } catch (InterruptedException e) {
                        e.printStackTrace();
                    }


                    log.info("Sending new set price message for endpoint message");
                    endpoint.sendMessage(new SetPriceMessage(1L, 1243, 25.50f));

                    try {
                        Thread.sleep(5000);
                    } catch (InterruptedException e) {
                        e.printStackTrace();
                    }

                    log.info("Sending new dispatch of product 200 message to box 2");
                    endpoint.sendMessage(new Message(Message.Type.DISPATCH, 2L, 200L));


                    try {
                        Thread.sleep(5000);
                    } catch (InterruptedException e) {
                        e.printStackTrace();
                    }

                    log.info("Sending new set stock of 10 product to productId=200 message to box 2");
                    endpoint.sendMessage(new SetStockMessage(2L, 200L, 10));


                    System.exit(0);
                }
            };
            timer.schedule(task, 5000);

        } catch (DeploymentException e) {
            throw new RuntimeException(e);
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}
