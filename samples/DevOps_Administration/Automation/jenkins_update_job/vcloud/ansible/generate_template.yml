---
- name: Generar template de vApp
  hosts: localhost
  gather_facts: false
  environment: "{{ proxy_env }}"
  tasks:

  - name: Codificar credenciales
    shell: echo -n '{{ api_user }}@{{ org_name }}:{{ api_password }}' | base64
    register: encodedCreds

  - name: Autenticación vCloud
    environment: "{{ proxy_env }}"
    uri:
      url: "{{ api_host }}/api/sessions"
      headers:
        Accept: "application/*+xml;version=1.5"
        Authorization: "Basic {{ encodedCreds.stdout }}"
      method: POST
      dest: "{{ tmp_dir }}/login.xml"
      validate_certs: False
    register: login

  - name: Extraer href Organización
    xml_read:
      xmlfile: "{{ tmp_dir }}/login.xml"
      xpath: "/n:Session/n:Link[@name='{{ org_name }}']/@href"
      namespaces: "n=http://www.vmware.com/vcloud/v1.5"
    register: org_href

  - name: Obtener contenido Organización
    uri:
      url: "{{ org_href.value }}"
      headers:
        Accept: "application/*+xml;version=1.5"
        Cookie: "{{ login.set_cookie }}"
      method: GET
      validate_certs: False
      dest: "{{ tmp_dir }}/org.xml"

  - name: Extraer href Catálogo
    xml_read:
      xmlfile: "{{ tmp_dir }}/org.xml"
      xpath: "/n:Org/n:Link[@name='{{ catalog_name }}']/@href"
      namespaces: "n=http://www.vmware.com/vcloud/v1.5"
    register: catalog_href

  - name: Obtener contenido Catálogo
    uri:
      url: "{{ catalog_href.value }}"
      headers:
        Accept: "application/*+xml;version=1.5"
        Cookie: "{{ login.set_cookie }}"
      method: GET
      validate_certs: False
      dest: "{{ tmp_dir }}/catalog.xml"

  - name: Extraer href Template
    xml_read:
      xmlfile: "{{ tmp_dir }}/catalog.xml"
      xpath: "/n:Catalog/n:CatalogItems/n:CatalogItem[@name='{{ vapp_tmpl_name }}']/@href"
      namespaces: "n=http://www.vmware.com/vcloud/v1.5"
    register: template_href

  - name: Extraer id Template
    xml_read:
      xmlfile: "{{ tmp_dir }}/catalog.xml"
      xpath: "/n:Catalog/n:CatalogItems/n:CatalogItem[@name='{{ vapp_tmpl_name }}']/@id"
      namespaces: "n=http://www.vmware.com/vcloud/v1.5"
    register: template_id

  - name: Extraer href vDC
    xml_read:
      xmlfile: "{{ tmp_dir }}/org.xml"
      xpath: "/n:Org/n:Link[@name='{{ vdc_name }}']/@href"
      namespaces: "n=http://www.vmware.com/vcloud/v1.5"
    register: vdc_href

  - name: Obtener contenido vDC
    uri:
      url: "{{ vdc_href.value }}"
      headers:
        Accept: "application/*+xml;version=1.5"
        Cookie: "{{ login.set_cookie }}"
      method: GET
      validate_certs: False
      dest: "{{ tmp_dir }}/vdc.xml"

  - name: Extraer href vApp
    xml_read:
      xmlfile: "{{ tmp_dir }}/vdc.xml"
      xpath: "/n:Vdc/n:ResourceEntities/n:ResourceEntity[@name='{{ vapp_name }}']/@href"
      namespaces: "n=http://www.vmware.com/vcloud/v1.5"
    register: vapp_href

  - name: Generar archivo CaptureVAppParams.xml
    template:
      src: templates/CaptureVAppParams.xml.j2
      dest: "{{ tmp_dir }}/CaptureVAppParams.xml"

  - name: Generar archivo CaptureVAppParamsOW.xml
    template:
      src: templates/CaptureVAppParamsOW.xml.j2
      dest: "{{ tmp_dir }}/CaptureVAppParamsOW.xml"

  - name: Capturar vApp como Template (Nuevo)
    uri:
      url: "{{ catalog_href.value }}/action/captureVApp"
      body: "{{ lookup('file','{{ tmp_dir }}/CaptureVAppParams.xml') }}"
      headers:
        Accept: "application/*+xml;version=1.5"
        Cookie: "{{ login.set_cookie }}"
        Content-Type: "application/vnd.vmware.vcloud.captureVAppParams+xml"
      method: POST
      status_code: 202
      validate_certs: False
    register: response
    when: template_href.value == ""

  - name: Capturar vApp como Template (Sobrescribir)
    uri:
      url: "{{ catalog_href.value }}/action/captureVApp"
      body: "{{ lookup('file','{{ tmp_dir }}/CaptureVAppParamsOW.xml') }}"
      headers:
        Accept: "application/*+xml;version=1.5"
        Cookie: "{{ login.set_cookie }}"
        Content-Type: "application/vnd.vmware.vcloud.captureVAppParams+xml"
      method: POST
      status_code: 202
      validate_certs: False
    register: response
    when: template_href.value != ""
